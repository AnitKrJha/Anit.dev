---
import { ViewTransitions } from "astro:transitions";
import Navbar from "../components/Navbar.astro";
import Icon from "/public/logo.svg";
import Footer from "../components/Footer.astro";
type Props = {
  title: string;
  description: string;
  image: string;
};
const { title, description, image } = Astro.props;
---

<html
  lang="en"
  class="dark"
  style="font-family: 'Bricolage Grotesque',graphik;"
>
  <head>
    <meta name="color-scheme" content="dark light" />
    <meta name="theme-color" content="#1c1917" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Bricolage+Grotesque:opsz,wght@12..96,300;12..96,400;12..96,500;12..96,600;12..96,700&display=swap"
      rel="stylesheet"
    />

    <script is:inline>
      // On page load or when changing themes, best to add inline in `head` to avoid FOUC

      const setColorMode = () => {
        if (localStorage.theme === "dark" || !("theme" in localStorage)) {
          // const metaTheme = document.querySelector('meta[name="theme-color"]');
          // if (metaTheme !== null) metaTheme.setAttribute("content", "#1c1917");
          document.documentElement.classList.add("dark");
        } else {
          // const metaTheme = document.querySelector('meta[name="theme-color"]');
          // if (metaTheme !== null) metaTheme.setAttribute("content", "#fff9eb");
          document.documentElement.classList.remove("dark");
        }
      };

      setColorMode();
      document.addEventListener("astro:after-swap", setColorMode);

      // document.addEventListener("astro:page-load", setColorMode);
    </script>
    <!-- global meta tags -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <link rel="icon" href={"/logo.ico"} />
    <meta name="generator" content={Astro.generator} />
    <!-- primary meta tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />

    <!-- open graph -->
    <meta property="og:type" content="website" />
    <meta property="og:site_name" content="Anit Kumar Jha" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={image} />

    <!-- twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={image} />

    <!-- link tags-->
    <!-- <link
      rel="preload"
      href="/fonts/graphik.ttf"
      as="font"
      type="font/ttf"
      crossorigin="anonymous"
    />
    <link
      rel="preload"
      href="/fonts/graphik2.ttf"
      as="font"
      type="font/ttf"
      crossorigin="anonymous"
    /> -->
    <link rel="sitemap" href="/sitemap-index.xml" />
    <ViewTransitions />
    <script>
      window.va =
        window.va ||
        function () {
          (window.vaq = window.vaq || []).push(arguments);
        };
    </script>
  </head>
  <body
    class="bg-[#fff9eb] dak:text-slate-50 text-slate-800 dark:bg-stone-900 max-w-3xl mx-auto px-4 overflow-y-scroll"
  >
    <Navbar />
    <main
      class="prose prose-stone dark:prose-invert py-2 px-2 mx-auto min-h-[90dvh]"
    >
      <slot name="extra-header" />
      <slot />
    </main>
    <Footer />
    <style is:global>
      /* @font-face {
        font-family: "graphik";
        src: url("/fonts/graphik.ttf"), url("/fonts/graphik2.ttf");
        font-display: swap;
      } */
      @keyframes fade-in {
        from {
          opacity: 0;
        }
      }

      @keyframes fade-out {
        to {
          opacity: 0;
        }
      }

      @keyframes slide-from-right {
        from {
          transform: translateX(30px);
        }
      }

      @keyframes slide-to-left {
        to {
          transform: translateX(-30px);
        }
      }

      ::view-transition-old(root) {
        animation:
          90ms cubic-bezier(0.4, 0, 1, 1) both fade-out,
          300ms cubic-bezier(0.4, 0, 0.2, 1) both slide-to-left;
      }

      ::view-transition-new(root) {
        animation:
          210ms cubic-bezier(0, 0, 0.2, 1) 90ms both fade-in,
          300ms cubic-bezier(0.4, 0, 0.2, 1) both slide-from-right;
      }

      p {
        font-size: 0.95rem;
      }
      h4 {
        font-size: 1rem !important;
      }
      h1 {
        @apply !text-2xl;
      }
      h2 {
        @apply !text-xl;
      }
      h3 {
        @apply !text-lg;
      }
      ::-webkit-scrollbar {
        width: 5px;
        height: 5px;
      }

      /* Track styles */
      ::-webkit-scrollbar-track {
        @apply bg-gray-600 /* Light greyish background */;
      }

      /* Thumb styles */
      ::-webkit-scrollbar-thumb {
        @apply bg-gray-300/80  rounded
        /* background-color: rgba(
          192,
          192,
          192,
          0.5
        ); Translucent light greyish */;
      }
    </style>
  </body>
</html>
